input {
  stdin {
    codec => multiline {
      pattern => "^\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}"
      negate => "true"
      what => "previous"
    }
  }
}
filter {
  grok {
    match => {
      "message" => [
        "%{GREEDYDATA:timestamp} \[%{DATA:context}\] %{LOGLEVEL:loglevel}\s+%{JAVACLASS:javaclass}\s+%{GREEDYDATA}\s+%{NUMBER:querytime_ms}\s+ms.%{GREEDYDATA}",
        "%{GREEDYDATA:timestamp} \[%{DATA:context}\] %{LOGLEVEL:loglevel}\s+%{JAVACLASS:javaclass}\s+%{GREEDYDATA}\s+%{NUMBER:querytime_ms}\s+ms",
        "%{GREEDYDATA:timestamp} \[%{DATA:context}\] %{LOGLEVEL:loglevel}\s+%{JAVACLASS:javaclass}\s+%{GREEDYDATA}"
      ]
    }
  }
  mutate {
    replace => ["timestamp", "%{timestamp} %{+Y}"]
  }
  date {
    match => [ "timestamp", "MM-dd HH:mm:ss.SSS YYYY" ]
  }
  mutate {
    replace => ["timestamp", "%{@timestamp}"]
  }
  mutate {
    convert => {
      "querytime_ms" => "integer"
    }
  }

  # just for tests
  mutate {
    replace => {
      "host" => "testing_host"
    }
  }
}
